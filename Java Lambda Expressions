/*
https://www.hackerrank.com/challenges/java-lambda-expressions/problem?h_r=internal-search
*/



import java.io.*;
import java.util.*;
interface PerformOperation {
 boolean check(int a);
}
class MyMath {
 public static boolean checker(PerformOperation p, int num) {
  return p.check(num);
 }

     // Write your code here

    
    public PerformOperation isOdd(){
        PerformOperation p = (a) -> {
                                    return (a%2 == 0) ? false : true;
                                    };
        return p;
        }
        
    public PerformOperation isPrime(){
        PerformOperation p = (a) -> {
                                    if (a == 0) return false;
                                    if (a == 1 || a == 2) return true;
                                            for(int i = 2; i<a; i++){
                                                if((a%i)==0) return false; 
                                            }
                                    return true;
                                    };
        return p;
    };

    public PerformOperation isPalindrome(){
        PerformOperation p = (a) -> {
                                    String s1 = String.valueOf(a);
                                    String s2 = (new StringBuffer(s1).reverse()).toString();
                                    return s1.equals(s2);
                                    };
        return p;
    };

}

public class Solution {

 public static void main(String[] args) throws IOException {
  MyMath ob = new MyMath();
  BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
  int T = Integer.parseInt(br.readLine());
  PerformOperation op;
  boolean ret = false;
  String ans = null;
  while (T--> 0) {
   String s = br.readLine().trim();
   StringTokenizer st = new StringTokenizer(s);
   int ch = Integer.parseInt(st.nextToken());
   int num = Integer.parseInt(st.nextToken());
   if (ch == 1) {
    op = ob.isOdd();
    ret = ob.checker(op, num);
    ans = (ret) ? "ODD" : "EVEN";
   } else if (ch == 2) {
    op = ob.isPrime();
    ret = ob.checker(op, num);
    ans = (ret) ? "PRIME" : "COMPOSITE";
   } else if (ch == 3) {
    op = ob.isPalindrome();
    ret = ob.checker(op, num);
    ans = (ret) ? "PALINDROME" : "NOT PALINDROME";

   }
   System.out.println(ans);
  }
 }
}
